#!/bin/dash

# ====================================================================
# tigger-show
# Shows the content of a SAVED file given the commit number.
# Errors:
    # -1.   .tigger not exists
    # 0.    not enough argument (less than 1)
    # 1.    #1 == ":$" or #1 does not contain :
    # 2.    file does not exist for the target commit

# Output cases:
    # the content of the file given the commit number
# Written by: Claude Sun
# For COMP2041 Assignment 1
# ====================================================================

# Error handlers

if [ ! -d ".tigger" ]
then
    echo "tigger-show: error: tigger repository directory .tigger not found" 1>&2
    exit 1
fi

if [ $# -eq 1 ]
then
    # get target file and target commit
    arg=$( echo "$1" | cut -d' ' -f2 )

    # check if : exists
    check=$( echo "$arg" | grep -E : )
    if [ "$check" = '' ]
    then
        echo "tigger-show: error: invalid object $arg" 1>&2
        exit 1
    fi
    target_commit=$( echo "$arg" | cut -d':' -f1)
    target_file=$( echo "$arg" | cut -d':' -f2)

    # target commit is a number
    if [ -n "$target_commit" ] && [ "$target_commit" -eq "$target_commit" ] 2>/dev/null
    then
        target_commit="$target_commit"
    elif [ "$target_commit" = '' ]
    then
        target_commit=''
    # wrong format (string before : is NOT a number, OR, string after : is empty)
    else
        if [ "$target_file" = '' ]
        then
            echo "usage: tigger-show <commit>:<filename>" 1>&2
        else
            echo "tigger-show: error: unknown commit '$target_commit'" 1>&2
        fi
        exit 1
    fi 
# wrong format (wrong number of arguments)
else
    echo "usage: tigger-show <commit>:<filename>" 1>&2
    exit 1
fi

# Obtain content from the commit if the commit is valid
if [ -d ".tigger/.commits/.$target_commit" ] && [ "$target_commit" != '' ]
then
    dire=".tigger/.commits/.$target_commit"
# If no specific commit is provided, try to obtain the file from the index of the branch
elif [ "$target_commit" = '' ]
then
    while read -r line
    do
        branch_name=$line
        index=."$branch_name"/.index
    done < .tigger/.current_branch_name
    dire=".tigger/$index"
else
    echo "tigger-show: error: unknown commit '$target_commit'" 1>&2
    exit 1
fi

if [ -r "$dire/$target_file" ]
then
    file="$dire/$target_file"
    cat "$file"
else
    if [ "$target_commit" = '' ]
    then
        echo "tigger-show: error: '$target_file' not found in index" 1>&2
        exit 1
    else
        echo "tigger-show: error: '$target_file' not found in commit $target_commit" 1>&2
        exit 1
    fi
fi
